apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: rabbitmq
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: sidecar
        image: busybox
        command: ["sh", "-c", "while [ true ] ; do until wget ${sync_url} -O - -q ; do echo could not reach ${sync_url} ... ; sleep 3s ; done ; echo next round in 30 minutes... ; sleep 30m ; done"]
        envFrom:
          - configMapRef:
              name: rabbitmq-env
      - name: rabbitmq
        image: rabbitmq:3.8.11-management-alpine
        volumeMounts:
          - name: config
            mountPath: /etc/rabbitmq
            readOnly: true
          - name: ca-certificate
            mountPath: "/etc/ca"
            readOnly: true
          - name: tls
            mountPath: "/etc/tls"
            readOnly: true
          - name: data
            mountPath: /var/lib/rabbitmq
        ports:
        - name: amqps
          containerPort: 5671
        - name: amqp
          containerPort: 5672
        - name: https
          containerPort: 15671
        - name: http
          containerPort: 15672
        livenessProbe:
          exec:
            command: ["/bin/sh", "-ec", "rabbitmq-diagnostics -q ping"]
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command: ["/bin/sh", "-ec", "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms"]
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 10
      volumes:
        - name: config
          secret:
            secretName: rabbitmq-config
        - name: ca-certificate
          configMap:
            name: beehive-ca-certificate
        - name: tls
          secret:
            secretName: beehive-rabbitmq-tls-secret
        - name: data
          persistentVolumeClaim:
            claimName: rabbitmq-data
